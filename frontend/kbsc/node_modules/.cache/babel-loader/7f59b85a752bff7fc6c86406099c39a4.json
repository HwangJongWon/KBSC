{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uBB38\\uC9C0\\uD61C\\\\Desktop\\\\react\\\\KBSC\\\\frontend\\\\kbsc\\\\src\\\\screens\\\\FromText.js\",\n    _s = $RefreshSig$();\n\nimport { Header } from '../components/Styles/Header/Header.styled';\nimport { Container } from '../components/Styles/Container/Container.style';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport React, { useRef } from 'react';\nimport { Box } from '@mui/system';\nimport { Text } from '../components/Styles/Container/Camera.style'; //import { useState, useEffect } from 'react';\n\nimport Word from '../db/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FromText() {\n  _s();\n\n  const textRef = useRef(null);\n\n  function update() {\n    fetch(`http://localhost:3000/text`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: textRef.current.value\n      })\n    }).then(res => {\n      if (res.ok) {\n        alert('생성이 완료되었습니다.');\n      }\n    });\n  } // const [words, setWords] = useState([]);\n\n  /*useEffect(() => {\r\n    fetch(\"http://localhost:3000/wordList\")\r\n      .then(res=>{\r\n        return res.json();\r\n      })\r\n      .then(data =>{\r\n        setWords(data);\r\n      });\r\n  \r\n  }, []);*/\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          label: \"text\",\n          name: \"text\",\n          autoFocus: true,\n          style: {\n            width: '350%'\n          },\n          inputRef: textRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: update,\n          children: \"\\uBC88\\uC5ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: Word && Word.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: [word.id, \" . \", word.word, \" : \", word.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n}\n\n_s(FromText, \"w6wg8oN6T1JIeHvMfowtaM3MyjI=\");\n\n_c = FromText;\n\nvar _c;\n\n$RefreshReg$(_c, \"FromText\");","map":{"version":3,"names":["Header","Container","TextField","Button","React","useRef","Box","Text","Word","FromText","textRef","update","fetch","method","headers","body","JSON","stringify","text","current","value","then","res","ok","alert","marginTop","display","flexDirection","alignItems","width","map","word","id"],"sources":["C:/Users/문지혜/Desktop/react/KBSC/frontend/kbsc/src/screens/FromText.js"],"sourcesContent":["import { Header } from '../components/Styles/Header/Header.styled'\r\nimport { Container } from '../components/Styles/Container/Container.style'\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button } from '@mui/material';\r\nimport React , { useRef } from 'react';\r\nimport { Box } from '@mui/system';\r\nimport { Text } from '../components/Styles/Container/Camera.style';\r\n//import { useState, useEffect } from 'react';\r\n\r\nimport Word from '../db/data.json'\r\n\r\nexport default function FromText() {\r\nconst textRef = useRef(null);\r\n\r\n\r\nfunction update(){\r\n  fetch(`http://localhost:3000/text`,{\r\n    method:'POST',\r\n    headers:{\r\n      'Content-Type' : 'application/json'\r\n    },\r\n    body : JSON.stringify({\r\n      text : textRef.current.value,\r\n    }),\r\n  })\r\n  .then(res => {\r\n    if(res.ok){\r\n      alert('생성이 완료되었습니다.')\r\n    }\r\n  })\r\n}\r\n\r\n// const [words, setWords] = useState([]);\r\n\r\n/*useEffect(() => {\r\n  fetch(\"http://localhost:3000/wordList\")\r\n    .then(res=>{\r\n      return res.json();\r\n    })\r\n    .then(data =>{\r\n      setWords(data);\r\n    });\r\n\r\n}, []);*/\r\n\r\nreturn (\r\n  <Container>\r\n    <Header>\r\n    <Box\r\n      sx={{\r\n        marginTop: 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n    <TextField \r\n    margin = \"normal\"\r\n    label=\"text\" \r\n    name = \"text\" \r\n    autoFocus\r\n    style={{width:'350%'}}\r\n    inputRef={textRef}\r\n    />\r\n    <Button onClick={update}>번역</Button>\r\n    </Box>\r\n    </Header>\r\n    <Text>\r\n      <div className='box'>\r\n        {\r\n          Word && Word.map( word => (\r\n            <div className='list'>\r\n              {word.id} . {word.word} : {word.text}\r\n              \r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n    </Text>\r\n  </Container>\r\n)}\r\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,2CAAvB;AACA,SAASC,SAAT,QAA0B,gDAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,KAAP,IAAiBC,MAAjB,QAA+B,OAA/B;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,IAAT,QAAqB,6CAArB,C,CACA;;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EACnC,MAAMC,OAAO,GAAGL,MAAM,CAAC,IAAD,CAAtB;;EAGA,SAASM,MAAT,GAAiB;IACfC,KAAK,CAAE,4BAAF,EAA8B;MACjCC,MAAM,EAAC,MAD0B;MAEjCC,OAAO,EAAC;QACN,gBAAiB;MADX,CAFyB;MAKjCC,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;QACpBC,IAAI,EAAGR,OAAO,CAACS,OAAR,CAAgBC;MADH,CAAf;IAL0B,CAA9B,CAAL,CASCC,IATD,CASMC,GAAG,IAAI;MACX,IAAGA,GAAG,CAACC,EAAP,EAAU;QACRC,KAAK,CAAC,cAAD,CAAL;MACD;IACF,CAbD;EAcD,CAnBkC,CAqBnC;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAEA,oBACE,QAAC,SAAD;IAAA,wBACE,QAAC,MAAD;MAAA,uBACA,QAAC,GAAD;QACE,EAAE,EAAE;UACFC,SAAS,EAAE,CADT;UAEFC,OAAO,EAAE,MAFP;UAGFC,aAAa,EAAE,QAHb;UAIFC,UAAU,EAAE;QAJV,CADN;QAAA,wBAQA,QAAC,SAAD;UACA,MAAM,EAAG,QADT;UAEA,KAAK,EAAC,MAFN;UAGA,IAAI,EAAG,MAHP;UAIA,SAAS,MAJT;UAKA,KAAK,EAAE;YAACC,KAAK,EAAC;UAAP,CALP;UAMA,QAAQ,EAAEnB;QANV;UAAA;UAAA;UAAA;QAAA,QARA,eAgBA,QAAC,MAAD;UAAQ,OAAO,EAAEC,MAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAhBA;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QADF,eAqBE,QAAC,IAAD;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,UAEIH,IAAI,IAAIA,IAAI,CAACsB,GAAL,CAAUC,IAAI,iBACpB;UAAK,SAAS,EAAC,MAAf;UAAA,WACGA,IAAI,CAACC,EADR,SACeD,IAAI,CAACA,IADpB,SAC6BA,IAAI,CAACb,IADlC;QAAA;UAAA;UAAA;UAAA;QAAA,QADM;MAFZ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoCE;;GAtEsBT,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}